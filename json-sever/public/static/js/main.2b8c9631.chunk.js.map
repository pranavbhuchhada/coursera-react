{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","toggleModal","setState","isModalOpen","state","handleSubmit","values","postComment","dishId","rating","author","comment","Fragment","Button","outline","this","class","aria-hidden","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","select","model","selected","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","showComments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","bind","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarBrand","href","height","NavbarToggler","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","Media","tag","left","middle","object","body","heading","About","leaders","CardHeader","title","list","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","resetFeedbackForm","role","size","offset","checkbox","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b8c9631.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React,{Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal,ModalBody,ModalHeader, Row, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {LocalForm, Control, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n        }\r\n    }\r\n    toggleModal = () =>{\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit = (values) => {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n            <Button outline onClick={this.toggleModal}><i class=\"fa fa-pencil fa-lg\" aria-hidden=\"true\"></i> Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row>\r\n                            <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={12}>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option selected>5</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row >\r\n                            <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={12}>\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(2), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={12}>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\" />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={12}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nfunction RenderDish({dish}) {\r\n    return(\r\n        <div  className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );   \r\n}\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    const showComments = comments.map((comment) => {\r\n        return (\r\n            <Stagger in>\r\n            {comments.map((comment) => {\r\n                return (\r\n                    <Fade in>\r\n                    <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </li>\r\n                    </Fade>\r\n                );\r\n            })}\r\n            </Stagger>\r\n        );\r\n    })\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h3>Comments</h3>\r\n            <ul className=\"list-unstyled\">\r\n                {showComments}\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    );\r\n}\r\nconst  DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                <RenderDish dish={props.dish} />\r\n                <RenderComments comments={props.comments}\r\n                    postComment={props.postComment}\r\n                    dishId={props.dish.id}\r\n                    />\r\n            </div>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(<div></div>);\r\n    }\r\n}\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,Button, Modal, ModalHeader, ModalBody,Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar className=\"ml-auto\">\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {baseUrl} from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({leader}){\n    return(\n        <div className=\"col-12\">\n            <Media tag=\"li\">\n                <Media left middle className=\"m-3\">\n                    <Media object src={baseUrl + leader.image} alt={leader.name}/>\n                </Media>\n                <Media body>\n                    <Media heading>{leader.name}</Media>\n                    <p>{leader.designation}</p>\n                    <p>{leader.description}</p>\n                </Media>\n            </Media>\n        </div>\n    );\n}\nfunction About(props) {\n\n    const leaders = props.leaders.map((leader) => {\n        return (\n            <Fade in key={leader.id}>\n                <RenderLeader key={leader.id} leader={leader}/>\n            </Fade>\n        );\n    });\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                    <div className=\"col-12\">                        \n                        <Media list>\n                            <Stagger in>\n                                {leaders}\n                            </Stagger>\n                        </Media>\n                    </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.messages);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n      firstname:firstname,\r\n      lastname:lastname,\r\n      telnum:telnum,\r\n      email:email,\r\n      agree:agree,\r\n      contactType:contactType,\r\n      message:message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders,postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchLeaders: () => { dispatch(fetchLeaders())},\r\n    fetchDishes: () => { dispatch(fetchDishes())},\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    postFeedback:(firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n    render() {\r\n        const HomePage = () => {\r\n            return(\r\n                <Home \r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                /> \r\n            );\r\n          }\r\n      \r\n          const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n          };\r\n        return (\r\n            <div>\r\n                <Header />\r\n                    <div>\r\n                    <TransitionGroup>\r\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} />} />} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                    </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}